@use '../field/base' as field-base;
@use '../field/selector' as field-selector;
@use './base';

@mixin leading-container {
  &__leading-container {
    @include field-base.leading-core;
  }
}

@mixin textarea {
  &.forge-text-field--textarea {
    // Field
    @include base.field-with-textarea(--forge-text-field-height);
    // Core
    ::slotted(textarea) {
      @include base.textarea-core;
    }
    // Color
    &:not(.forge-field--disabled) {
      ::slotted(textarea) {
        @include field-base.input-color(default);
      }
    }
    &.forge-field--disabled {
      ::slotted(textarea) {
        @include field-base.input-color(disabled);
      }
    }
  }
}

@mixin multi-input {
  &--multi-input {
    ::slotted(input:first-of-type) {
      @include base.input-first;
    }
    ::slotted(input:last-of-type) {
      @include base.input-last;
    }
    ::slotted([data-forge-multi-input-separator]) {
      @include base.input-separator-core;
    }

    &.forge-field--label ::slotted([data-forge-multi-input-separator]) {
      @include base.input-separator-margin(label);
    }
    &:not(.forge-field--label) ::slotted([data-forge-multi-input-separator]) {
      @include base.input-separator-margin(default);
    }
  }
}
